stages:
  - test-install
  - test-latest
  - test-all
  - benchmark-all
  - deploy

test_install:
  stage: test-install
  image: python:latest
  script:
    - pip install .
    - python -m graphdb --help

test_latest:
  stage: test-latest
  image: python:latest
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_alpine:
  stage: test-all
  image: python:alpine
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_slim:
  stage: test-all
  image: python:slim
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_3.9:
  stage: test-all
  image: python:3.9
  allow_failure: true
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_3.8:
  stage: test-all
  image: python:3.8
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_3.7:
  stage: test-all
  image: python:3.7
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_3.6:
  stage: test-all
  image: python:3.6
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

test_3.5:
  stage: test-all
  image: python:3.5
  before_script:
    - pip install .
  script:
    # run unittests
    - python -m unittest --verbose graphdb 2>&1 | tee test.log
    # ensure unittest module didnt run 0 tests
    - python -c 'exit(int("Ran 0 tests" in open("test.log","r").read()))'

benchmark_latest:
  stage: benchmark-all
  image: python:latest
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py

benchmark_alpine:
  stage: benchmark-all
  image: python:alpine
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py
    
benchmark_slim:
  stage: benchmark-all
  image: python:slim
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py
    
benchmark_3.9:
  stage: benchmark-all
  image: python:3.9
  allow_failure: true
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py
    
benchmark_3.8:
  stage: benchmark-all
  image: python:3.8
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py
    
benchmark_3.7:
  stage: benchmark-all
  image: python:3.7
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py

benchmark_3.6:
  stage: benchmark-all
  image: python:3.6
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py

benchmark_3.5:
  stage: benchmark-all
  image: python:3.5
  before_script:
    - pip install .
  script:
    - python graphdb/__benchmark__.py


deploy_job:
  stage: deploy
  image: docker:dind
  script:
    - pwd
    - ls -lthar